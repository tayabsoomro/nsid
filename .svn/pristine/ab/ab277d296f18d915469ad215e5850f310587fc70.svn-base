# Muhammad Tayab Soomro
# 11199539
# mts066
# CMPT 214 - nsid - Annotated Test Log


# Showing that the script runs in different ways without error
# 1. argument to shell invoked as a command
-bash-4.3$ sh nsid.sh
-bash-4.3$

# 2. invoked as a command
-bash-4.3$ ./nsid.sh
-bash-4.3$


# Running the program with file substitution
# Showing that the file initially has some combination of potential NSIDs
-bash-4.3$ cat question_2_in.txt
ajk449 brt381
ajk44

449ajk
ajkajk449
ajk4449

# Executing the program with the file substitution
-bash-4.3$ sh nsid.sh < question_2_in.txt
ajk449 is valid
brt381 is valid
ajk44 is not valid
449ajk is not valid
ajkajk449 is not valid
ajk4449 is not valid
-bash-4.3$


# Getting the exit status of above command, should be 1 due to not valid NSIDs
-bash-4.3$ echo $?
1
-bash-4.3$

# Piping the program with the output from the question_2_in.txt using cat
-bash-4.3$ cat question_2_in.txt | sh nsid.sh
ajk449 is valid
brt381 is valid
ajk44 is not valid
449ajk is not valid
ajkajk449 is not valid
ajk4449 is not valid

# The exit status is the same as previous.
-bash-4.3$ echo $?
1
-bash-4.3$

# Using the program with one argument provided and confirming the exit status
-bash-4.3$ ./nsid.sh mts066
mts066 is valid
-bash-4.3$ echo $?
0

# Using the program with two arguments provided and confirming the exit status
-bash-4.3$ ./nsid.sh mts066 mfa256
mts066 is valid
mfa256 is valid
-bash-4.3$ echo $?
0

# Using the argument with three arguments provided where the last one is incorrect
-bash-4.3$ ./nsid.sh mts066 mfa256 invalid
mts066 is valid
mfa256 is valid
invalid is not valid

# The exit status for this is 1 because the last value was invalid
-bash-4.3$ echo $?
1

# Using the program with one invalid value, and confirming that the exit status
# is 1.
-bash-4.3$ ./nsid.sh invalid
invalid is not valid
-bash-4.3$ echo $?
1

# Using the program with three arguments with first argument incorrect and the
# last argument correct
-bash-4.3$ ./nsid.sh invalid mts066 mfa256
invalid is not valid
mts066 is valid
mfa256 is valid

# The exit status is 0 because the last value was correct.
-bash-4.3$ echo $?
0

# Testing the uppercase NSIDs and confirming the exit statuses
-bash-4.3$ ./nsid.sh MTS066 MFA256
MTS066 is valid
MFA256 is valid
-bash-4.3$ echo $?
0

# Testing the mixed case NSIDs and confirming the exit statuses
-bash-4.3$ ./nsid.sh mTs066 mAP902
mTs066 is valid
mAP902 is valid
-bash-4.3$ echo $?
0

# Testing the space delimited string enclosed in quotes, with a correct NSID as
# part of the string. It should record it as one string and subsequently make
# it an invalid NSID.
-bash-4.3$ ./nsid.sh "Invalid mts066"
Invalid mts066 is not valid

# The exit status should obviously be 1, since it recorded the above as one string
# and is invalid NSID.
-bash-4.3$ echo $?
1


# Testing the program with a command provided as an argument, which catenates the
# question_2_in.txt file
-bash-4.3$ ./nsid.sh `cat question_2_in.txt`
ajk449 is valid
brt381 is valid
ajk44 is not valid
449ajk is not valid
ajkajk449 is not valid
ajk4449 is not valid
-bash-4.3$ echo $?
1

# Using the program with the input obtained from standard input.
-bash-4.3$ ./nsid.sh
tayab
soomro
mts066
mfa256
map902
rah505
invalid
nsid
"invalid mts066"
"mts066"
tayab is not valid
soomro is not valid
mts066 is valid
mfa256 is valid
map902 is valid
rah505 is valid
invalid is not valid
nsid is not valid
"invalid is not valid
mts066" is not valid
"mts066" is not valid
-bash-4.3$ echo $?
1

# Providing the arguments in the quotes and checking if the exit status is correct
-bash-4.3$ ./nsid.sh "mts066"
mts066 is valid
-bash-4.3$
-bash-4.3$ echo $?
0


# Testing the program against special characters.
-bash-4.3$ ./nsid.sh '-$!@#*&$'
-$!@#*&$ is not valid

# The exit status is supposed to be 1.
-bash-4.3$ echo $?
1

# Testing with the reverted NSID and showing the exit status
-bash-4.3$ ./nsid.sh 066mts
066mts is not valid
-bash-4.3$ echo $?
1
-bash-4.3$
